~test_suite_name: SimplePipeline
~result_index: 0
~result:
pipeline#0: MockExchangeReceiver|exchange_receiver_0|is_tidb_op -> Filter|selection_1|is_tidb_op -> Projection|project_2|is_tidb_op -> Limit|limit_3|is_tidb_op -> Projection|limit_3|non_tidb_op -> MockExchangeSender|exchange_sender_4|is_tidb_op
@
~test_suite_name: SimplePipeline
~result_index: 1
~result:
pipeline#0: MockTableScan|table_scan_0|is_tidb_op -> Projection|table_scan_0|non_tidb_op
@
~test_suite_name: StrangeQuery
~result_index: 0
~result:
pipeline#0: MockTableScan|table_scan_0|is_tidb_op -> Filter|selection_1|is_tidb_op -> Filter|selection_2|is_tidb_op -> Filter|selection_3|is_tidb_op -> Projection|selection_3|non_tidb_op
@
~test_suite_name: StrangeQuery
~result_index: 1
~result:
pipeline#0: MockTableScan|table_scan_0|is_tidb_op -> Limit|limit_1|is_tidb_op -> Limit|limit_2|is_tidb_op -> Limit|limit_3|is_tidb_op -> Projection|limit_3|non_tidb_op
@
~test_suite_name: StrangeQuery
~result_index: 2
~result:
pipeline#0: MockTableScan|table_scan_0 -> TopN|topn_1 -> TopN|topn_2 -> TopN|topn_3 -> Projection|NonTiDBOperator
@
~test_suite_name: SingleQueryBlock
~result_index: 0
~result:
Union: <for test>
 Expression x 10: <final projection>
  SharedQuery: <restore concurrency>
   MergeSorting, limit = 10
    Union: <for partial order>
     PartialSorting x 10: limit = 10
      Expression: <before TopN>
       Filter
        Expression: <expr after aggregation>
         SharedQuery: <restore concurrency>
          ParallelAggregating, max_threads: 10, final: true
           Expression x 10: <before aggregation>
            Filter
             MockTableScan
@
~test_suite_name: SingleQueryBlock
~result_index: 1
~result:
Union: <for test>
 Expression x 10: <final projection>
  SharedQuery: <restore concurrency>
   Limit, limit = 10
    Union: <for partial limit>
     Limit x 10, limit = 10
      Filter
       Expression: <expr after aggregation>
        SharedQuery: <restore concurrency>
         ParallelAggregating, max_threads: 10, final: true
          Expression x 10: <before aggregation>
           Filter
            MockTableScan
@
~test_suite_name: ParallelQuery
~result_index: 0
~result:
pipeline#0: MockTableScan|table_scan_0|is_tidb_op -> Limit|limit_1|is_tidb_op -> Projection|limit_1|non_tidb_op
@
~test_suite_name: ParallelQuery
~result_index: 1
~result:
pipeline#0: MockTableScan|table_scan_0|is_tidb_op -> Limit|limit_1|is_tidb_op -> Projection|limit_1|non_tidb_op
@
~test_suite_name: ParallelQuery
~result_index: 2
~result:
pipeline#0: MockTableScan|table_scan_0|is_tidb_op -> Projection|project_1|is_tidb_op -> Projection|project_1|non_tidb_op
@
~test_suite_name: ParallelQuery
~result_index: 3
~result:
pipeline#0: MockTableScan|table_scan_0|is_tidb_op -> Projection|project_1|is_tidb_op -> Projection|project_1|non_tidb_op
@
~test_suite_name: ParallelQuery
~result_index: 4
~result:
Expression: <final projection>
 Expression: <expr after aggregation>
  Aggregating
   MockTableScan
@
~test_suite_name: ParallelQuery
~result_index: 5
~result:
Union: <for test>
 Expression x 5: <final projection>
  Expression: <expr after aggregation>
   SharedQuery: <restore concurrency>
    ParallelAggregating, max_threads: 5, final: true
     MockTableScan x 5
@
~test_suite_name: ParallelQuery
~result_index: 6
~result:
pipeline#0: MockTableScan|table_scan_0 -> TopN|topn_1 -> Projection|NonTiDBOperator
@
~test_suite_name: ParallelQuery
~result_index: 7
~result:
pipeline#0: MockTableScan|table_scan_0 -> TopN|topn_1 -> Projection|NonTiDBOperator
@
~test_suite_name: ParallelQuery
~result_index: 8
~result:
pipeline#0: MockTableScan|table_scan_0|is_tidb_op -> Filter|selection_1|is_tidb_op -> Projection|selection_1|non_tidb_op
@
~test_suite_name: ParallelQuery
~result_index: 9
~result:
pipeline#0: MockTableScan|table_scan_0|is_tidb_op -> Filter|selection_1|is_tidb_op -> Projection|selection_1|non_tidb_op
@
~test_suite_name: ParallelQuery
~result_index: 10
~result:
Union: <for test>
 Expression x 10: <final projection>
  Expression: <expr after aggregation>
   SharedQuery: <restore concurrency>
    ParallelAggregating, max_threads: 10, final: true
     SharedQuery x 10: <restore concurrency>
      Limit, limit = 10
       Union: <for partial limit>
        Limit x 10, limit = 10
         MockTableScan
@
~test_suite_name: ParallelQuery
~result_index: 11
~result:
Expression: <final projection>
 Expression: <expr after aggregation>
  Aggregating
   Limit, limit = 10
    MockTableScan
@
~test_suite_name: ParallelQuery
~result_index: 12
~result:
Union: <for test>
 Expression x 10: <final projection>
  Expression: <expr after aggregation>
   SharedQuery: <restore concurrency>
    ParallelAggregating, max_threads: 10, final: true
     SharedQuery x 10: <restore concurrency>
      MergeSorting, limit = 10
       Union: <for partial order>
        PartialSorting x 10: limit = 10
         MockTableScan
@
~test_suite_name: ParallelQuery
~result_index: 13
~result:
Expression: <final projection>
 Expression: <expr after aggregation>
  Aggregating
   MergeSorting, limit = 10
    PartialSorting: limit = 10
     MockTableScan
@
~test_suite_name: ParallelQuery
~result_index: 14
~result:
Union: <for test>
 Expression x 10: <final projection>
  Expression: <expr after aggregation>
   SharedQuery: <restore concurrency>
    ParallelAggregating, max_threads: 10, final: true
     Expression x 10: <projection>
      Expression: <expr after aggregation>
       SharedQuery: <restore concurrency>
        ParallelAggregating, max_threads: 10, final: true
         MockTableScan x 10
@
~test_suite_name: ParallelQuery
~result_index: 15
~result:
Expression: <final projection>
 Expression: <expr after aggregation>
  Aggregating
   Expression: <projection>
    Expression: <expr after aggregation>
     Aggregating
      MockTableScan
@
~test_suite_name: ParallelQuery
~result_index: 16
~result:
Union: <for test>
 MockExchangeSender x 10
  Expression: <final projection>
   Expression: <expr after aggregation>
    SharedQuery: <restore concurrency>
     ParallelAggregating, max_threads: 10, final: true
      MockTableScan x 10
@
~test_suite_name: ParallelQuery
~result_index: 17
~result:
MockExchangeSender
 Expression: <final projection>
  Expression: <expr after aggregation>
   Aggregating
    MockTableScan
@
~test_suite_name: ParallelQuery
~result_index: 18
~result:
pipeline#0: MockTableScan|table_scan_0 -> TopN|topn_1 -> Projection|NonTiDBOperator -> MockExchangeSender|exchange_sender_2
@
~test_suite_name: ParallelQuery
~result_index: 19
~result:
pipeline#0: MockTableScan|table_scan_0 -> TopN|topn_1 -> Projection|NonTiDBOperator -> MockExchangeSender|exchange_sender_2
@
~test_suite_name: ParallelQuery
~result_index: 20
~result:
pipeline#0: MockTableScan|table_scan_0|is_tidb_op -> Limit|limit_1|is_tidb_op -> Projection|limit_1|non_tidb_op -> MockExchangeSender|exchange_sender_2|is_tidb_op
@
~test_suite_name: ParallelQuery
~result_index: 21
~result:
pipeline#0: MockTableScan|table_scan_0|is_tidb_op -> Limit|limit_1|is_tidb_op -> Projection|limit_1|non_tidb_op -> MockExchangeSender|exchange_sender_2|is_tidb_op
@
~test_suite_name: ParallelQuery
~result_index: 22
~result:
pipeline#0: MockTableScan|table_scan_0|is_tidb_op -> Projection|table_scan_0|non_tidb_op -> JoinProbe|Join_3|is_tidb_op -> Projection|Join_3|non_tidb_op
 |- pipeline#1: MockTableScan|table_scan_1|is_tidb_op -> Limit|limit_2|is_tidb_op -> Projection|limit_2|non_tidb_op -> JoinBuild|Join_3|is_tidb_op
@
~test_suite_name: MultipleQueryBlockWithSource
~result_index: 0
~result:
pipeline#0: MockTableScan|table_scan_0|is_tidb_op -> Projection|project_1|is_tidb_op -> Projection|project_2|is_tidb_op -> Projection|project_3|is_tidb_op -> Projection|project_3|non_tidb_op
@
~test_suite_name: MultipleQueryBlockWithSource
~result_index: 1
~result:
pipeline#0: MockTableScan|table_scan_0 -> Projection|project_1 -> TopN|topn_2 -> Projection|project_3 -> Projection|NonTiDBOperator
@
~test_suite_name: MultipleQueryBlockWithSource
~result_index: 2
~result:
Union: <for test>
 Expression x 10: <final projection>
  Expression: <expr after aggregation>
   SharedQuery: <restore concurrency>
    ParallelAggregating, max_threads: 10, final: true
     Expression x 10: <projection>
      SharedQuery: <restore concurrency>
       MergeSorting, limit = 10
        Union: <for partial order>
         PartialSorting x 10: limit = 10
          Expression: <projection>
           MockTableScan
@
~test_suite_name: MultipleQueryBlockWithSource
~result_index: 3
~result:
Union: <for test>
 Expression x 10: <final projection>
  SharedQuery: <restore concurrency>
   Limit, limit = 10
    Union: <for partial limit>
     Limit x 10, limit = 10
      Expression: <projection>
       Filter
        Expression: <expr after aggregation>
         SharedQuery: <restore concurrency>
          ParallelAggregating, max_threads: 10, final: true
           Expression x 10: <projection>
            SharedQuery: <restore concurrency>
             MergeSorting, limit = 10
              Union: <for partial order>
               PartialSorting x 10: limit = 10
                Expression: <projection>
                 MockTableScan
@
~test_suite_name: MultipleQueryBlockWithSource
~result_index: 4
~result:
pipeline#0: MockExchangeReceiver|exchange_receiver_0|is_tidb_op -> Projection|project_1|is_tidb_op -> Projection|project_2|is_tidb_op -> Projection|project_3|is_tidb_op -> Projection|project_3|non_tidb_op
@
~test_suite_name: MultipleQueryBlockWithSource
~result_index: 5
~result:
pipeline#0: MockExchangeReceiver|exchange_receiver_0|is_tidb_op -> Projection|project_1|is_tidb_op -> Projection|project_2|is_tidb_op -> Projection|project_3|is_tidb_op -> Projection|project_3|non_tidb_op -> MockExchangeSender|exchange_sender_4|is_tidb_op
@
~test_suite_name: Window
~result_index: 0
~result:
Union: <for test>
 Expression x 10: <final projection>
  SharedQuery: <restore concurrency>
   Expression: <expr after window>
    Window, function: {row_number}, frame: {type: Rows, boundary_begin: Current, boundary_end: Current}
     MergeSorting, limit = 0
      Union: <for partial order>
       PartialSorting x 10: limit = 0
        MockTableScan
@
~test_suite_name: Window
~result_index: 1
~result:
Union: <for test>
 Expression x 10: <final projection>
  SharedQuery: <restore concurrency>
   Expression: <expr after window>
    Window, function: {row_number}, frame: {type: Rows, boundary_begin: Current, boundary_end: Current}
     MergeSorting, limit = 0
      Union: <for partial order>
       PartialSorting x 10: limit = 0
        MockTableScan
@
~test_suite_name: Window
~result_index: 2
~result:
Union: <for test>
 Expression x 10: <final projection>
  SharedQuery: <restore concurrency>
   Expression: <expr after window>
    Window, function: {row_number}, frame: {type: Rows, boundary_begin: Current, boundary_end: Current}
     Union: <merge into one for window input>
      SharedQuery x 10: <restore concurrency>
       MergeSorting, limit = 0
        Union: <for partial order>
         PartialSorting x 10: limit = 0
          MockTableScan
@
~test_suite_name: FineGrainedShuffle
~result_index: 0
~result:
Union: <for test>
 Expression x 8: <final projection>
  Expression: <expr after window>
   Window: <enable fine grained shuffle>, function: {row_number}, frame: {type: Rows, boundary_begin: Current, boundary_end: Current}
    MergeSorting: <enable fine grained shuffle>, limit = 0
     PartialSorting: <enable fine grained shuffle>: limit = 0
      MockExchangeReceiver
@
~test_suite_name: FineGrainedShuffle
~result_index: 1
~result:
pipeline#0: MockExchangeReceiver|exchange_receiver_0 -> TopN|topn_1 -> Projection|NonTiDBOperator
@
~test_suite_name: FineGrainedShuffle
~result_index: 2
~result:
Union: <for test>
 Expression x 10: <final projection>
  SharedQuery: <restore concurrency>
   Expression: <expr after window>
    Window, function: {row_number}, frame: {type: Rows, boundary_begin: Current, boundary_end: Current}
     MergeSorting, limit = 0
      Union: <for partial order>
       PartialSorting x 10: limit = 0
        MockExchangeReceiver
@
~test_suite_name: FineGrainedShuffle
~result_index: 3
~result:
pipeline#0: MockExchangeReceiver|exchange_receiver_0 -> TopN|topn_1 -> Projection|NonTiDBOperator
@
~test_suite_name: FineGrainedShuffleJoin
~result_index: 0
~result:
CreatingSets
 Union: <for join>
  HashJoinBuild x 8: <join build, build_side_root_executor_id = exchange_receiver_1 enable fine grained shuffle>, join_kind = Left
   Expression: <append join key and join filters for build side>
    Expression: <final projection>
     MockExchangeReceiver
 Union: <for test>
  Expression x 10: <final projection>
   Expression: <remove useless column after join>
    HashJoinProbe: <join probe, join_executor_id = Join_2, has_non_joined_data = false>
     Expression: <final projection>
      MockExchangeReceiver
@
~test_suite_name: FineGrainedShuffleJoin
~result_index: 1
~result:
pipeline#0: MockExchangeReceiver|exchange_receiver_0|is_tidb_op -> Projection|exchange_receiver_0|non_tidb_op -> JoinProbe|Join_2|is_tidb_op -> Projection|Join_2|non_tidb_op
 |- pipeline#1: MockExchangeReceiver|exchange_receiver_1|is_tidb_op -> Projection|exchange_receiver_1|non_tidb_op -> JoinBuild|Join_2|is_tidb_op
@
~test_suite_name: FineGrainedShuffleAgg
~result_index: 0
~result:
Union: <for test>
 Expression x 8: <final projection>
  Expression: <expr after aggregation>
   Aggregating: <enable fine grained shuffle>
    Expression: <before aggregation>
     MockExchangeReceiver
@
~test_suite_name: FineGrainedShuffleAgg
~result_index: 1
~result:
Union: <for test>
 Expression x 10: <final projection>
  Expression: <expr after aggregation>
   SharedQuery: <restore concurrency>
    ParallelAggregating, max_threads: 10, final: true
     Expression x 10: <before aggregation>
      MockExchangeReceiver
@
~test_suite_name: Join
~result_index: 0
~result:
pipeline#0: MockTableScan|table_scan_0|is_tidb_op -> Projection|table_scan_0|non_tidb_op -> JoinProbe|Join_6|is_tidb_op -> Projection|Join_6|non_tidb_op
 |- pipeline#1: MockTableScan|table_scan_1|is_tidb_op -> Projection|table_scan_1|non_tidb_op -> JoinProbe|Join_5|is_tidb_op -> Projection|Join_5|non_tidb_op -> JoinBuild|Join_6|is_tidb_op
  |- pipeline#2: MockTableScan|table_scan_2|is_tidb_op -> Projection|table_scan_2|non_tidb_op -> JoinProbe|Join_4|is_tidb_op -> Projection|Join_4|non_tidb_op -> JoinBuild|Join_5|is_tidb_op
   |- pipeline#3: MockTableScan|table_scan_3|is_tidb_op -> Projection|table_scan_3|non_tidb_op -> JoinBuild|Join_4|is_tidb_op
@
~test_suite_name: Join
~result_index: 1
~result:
pipeline#0: MockExchangeReceiver|exchange_receiver_0|is_tidb_op -> Projection|exchange_receiver_0|non_tidb_op -> JoinProbe|Join_6|is_tidb_op -> Projection|Join_6|non_tidb_op
 |- pipeline#1: MockExchangeReceiver|exchange_receiver_1|is_tidb_op -> Projection|exchange_receiver_1|non_tidb_op -> JoinProbe|Join_5|is_tidb_op -> Projection|Join_5|non_tidb_op -> JoinBuild|Join_6|is_tidb_op
  |- pipeline#2: MockExchangeReceiver|exchange_receiver_2|is_tidb_op -> Projection|exchange_receiver_2|non_tidb_op -> JoinProbe|Join_4|is_tidb_op -> Projection|Join_4|non_tidb_op -> JoinBuild|Join_5|is_tidb_op
   |- pipeline#3: MockExchangeReceiver|exchange_receiver_3|is_tidb_op -> Projection|exchange_receiver_3|non_tidb_op -> JoinBuild|Join_4|is_tidb_op
@
~test_suite_name: Join
~result_index: 2
~result:
pipeline#0: MockExchangeReceiver|exchange_receiver_0|is_tidb_op -> Projection|exchange_receiver_0|non_tidb_op -> JoinProbe|Join_6|is_tidb_op -> Projection|Join_6|non_tidb_op -> MockExchangeSender|exchange_sender_7|is_tidb_op
 |- pipeline#1: MockExchangeReceiver|exchange_receiver_1|is_tidb_op -> Projection|exchange_receiver_1|non_tidb_op -> JoinProbe|Join_5|is_tidb_op -> Projection|Join_5|non_tidb_op -> JoinBuild|Join_6|is_tidb_op
  |- pipeline#2: MockExchangeReceiver|exchange_receiver_2|is_tidb_op -> Projection|exchange_receiver_2|non_tidb_op -> JoinProbe|Join_4|is_tidb_op -> Projection|Join_4|non_tidb_op -> JoinBuild|Join_5|is_tidb_op
   |- pipeline#3: MockExchangeReceiver|exchange_receiver_3|is_tidb_op -> Projection|exchange_receiver_3|non_tidb_op -> JoinBuild|Join_4|is_tidb_op
@
~test_suite_name: JoinThenAgg
~result_index: 0
~result:
CreatingSets
 Union: <for join>
  HashJoinBuild x 10: <join build, build_side_root_executor_id = table_scan_1>, join_kind = Left
   Expression: <append join key and join filters for build side>
    Expression: <final projection>
     MockTableScan
 Union: <for test>
  Expression x 10: <final projection>
   Expression: <expr after aggregation>
    SharedQuery: <restore concurrency>
     ParallelAggregating, max_threads: 10, final: true
      Expression x 10: <before aggregation>
       Expression: <remove useless column after join>
        HashJoinProbe: <join probe, join_executor_id = Join_2, has_non_joined_data = false>
         Expression: <final projection>
          MockTableScan
@
~test_suite_name: JoinThenAgg
~result_index: 1
~result:
CreatingSets
 Union: <for join>
  HashJoinBuild x 10: <join build, build_side_root_executor_id = table_scan_1>, join_kind = Right
   Expression: <append join key and join filters for build side>
    Expression: <final projection>
     MockTableScan
 Union: <for test>
  Expression x 10: <final projection>
   Expression: <expr after aggregation>
    SharedQuery: <restore concurrency>
     ParallelAggregating, max_threads: 10, final: true
      Expression x 10: <before aggregation>
       Expression: <remove useless column after join>
        HashJoinProbe: <join probe, join_executor_id = Join_2, has_non_joined_data = true>
         Expression: <append join key and join filters for probe side>
          Expression: <final projection>
           MockTableScan
@
~test_suite_name: JoinThenAgg
~result_index: 2
~result:
CreatingSets
 Union: <for join>
  HashJoinBuild x 20: <join build, build_side_root_executor_id = exchange_receiver_1>, join_kind = Right
   Expression: <append join key and join filters for build side>
    Expression: <final projection>
     MockExchangeReceiver
 Union: <for test>
  MockExchangeSender x 20
   Expression: <final projection>
    SharedQuery: <restore concurrency>
     Limit, limit = 10
      Union: <for partial limit>
       Limit x 20, limit = 10
        Expression: <expr after aggregation>
         SharedQuery: <restore concurrency>
          ParallelAggregating, max_threads: 20, final: true
           Expression x 20: <before aggregation>
            Expression: <remove useless column after join>
             HashJoinProbe: <join probe, join_executor_id = Join_2, has_non_joined_data = true>
              Expression: <append join key and join filters for probe side>
               Expression: <final projection>
                MockExchangeReceiver
@
~test_suite_name: ListBase
~result_index: 0
~result:
Expression: <final projection>
 Limit, limit = 10
  Filter
   Expression: <expr after aggregation>
    Aggregating
     Expression: <before aggregation>
      Filter
       MockTableScan
@
~test_suite_name: ListBase
~result_index: 1
~result:
Union: <for test>
 Expression x 20: <final projection>
  SharedQuery: <restore concurrency>
   MergeSorting, limit = 10
    Union: <for partial order>
     PartialSorting x 20: limit = 10
      Expression: <before TopN>
       Filter
        Expression: <expr after aggregation>
         SharedQuery: <restore concurrency>
          ParallelAggregating, max_threads: 20, final: true
           Expression x 20: <before aggregation>
            Filter
             MockTableScan
@
